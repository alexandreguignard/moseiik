name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        architecture: [x86, aarch64]
        
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU (for ARM emulation on x86)
      if: matrix.architecture == 'aarch64'
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        
    - name: build Docker image and execute tests x86
      if: matrix.architecture == 'x86'
      run: |
        docker build -t moseiik --file Dockerfile .
        
    - name: build Docker image and execute tests arm64
      if: matrix.architecture == 'aarch64'
      run: |
        docker build --platform=arm64 -t moseiik --file Dockerfile .

    - name: Run Docker image and execute tests
      run: |
        docker run moseiik
